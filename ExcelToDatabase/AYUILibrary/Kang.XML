<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Kang</name>
    </assembly>
    <members>
        <member name="M:Kang.ExtendMethod.DateTimeExtendMethod.ToyyyyMMdd_HHmmss(System.DateTime)">
            <summary>
            获取“yyyy/MM/dd HH:mm:ss”格式的时间字串
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Model.KangSQLTableModel.GetType">
            <summary>
            返回类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kang.Model.KangSQLTableModel.ToString">
            <summary>
            返回实体的Json字串
            </summary>
            <returns></returns>
        </member>
        <member name="T:Kang.SQLManager.MySQLManager">
            <summary>
            MySQL数据库操作类
            </summary>
        </member>
        <member name="F:Kang.SQLManager.MySQLManager.showStr">
            <summary>
            是否显示SQL语句
            </summary>
        </member>
        <member name="F:Kang.SQLManager.MySQLManager.showState">
            <summary>
            是否打印数据库连接状态
            </summary>
        </member>
        <member name="F:Kang.SQLManager.MySQLManager.rollBack">
            <summary>
            是否显示SQL语句
            </summary>
        </member>
        <member name="M:Kang.SQLManager.MySQLManager.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            实例化数据库操作对象
            </summary>
            <param name="ip"></param>
            <param name="port"></param>
            <param name="dbname"></param>
            <param name="username"></param>
            <param name="password"></param>
        </member>
        <member name="M:Kang.SQLManager.MySQLManager.Close">
            <summary>
            关闭数据库
            </summary>
        </member>
        <member name="M:Kang.SQLManager.MySQLManager.OpenRoll">
            <summary>
            开启事物
            </summary>
        </member>
        <member name="M:Kang.SQLManager.MySQLManager.CloseRoll">
            <summary>
            关闭事物
            </summary>
        </member>
        <member name="M:Kang.SQLManager.MySQLManager.ExecuteSelect(System.String)">
            <summary>
            执行数据库查询语句，可查询单个字段单条信息
            </summary>
            <param name="sqlStr"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.SQLManager.MySQLManager.Save(System.Object)">
            <summary>
            保存对象
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.SQLManager.MySQLManager.Save(System.Object,System.String[],System.String[])">
            <summary>
            可替换参数的Save方法
            </summary>
            <param name="data"></param>
            <param name="sql_fields"></param>
            <param name="sql_values"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.SQLManager.MySQLManager.Delete``1(System.String)">
            <summary>
            根据主键删除数据
            </summary>
            <param name="rowguid"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.SQLManager.MySQLManager.Update(System.Object)">
            <summary>
            更新数据
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.SQLManager.MySQLManager.Update``1(System.String,System.String[],System.String[])">
            <summary>
            更新表部分字段信息
            </summary>
            <param name="guid">主键值</param>
            <param name="sql_fields"></param>
            <param name="sql_values"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.SQLManager.MySQLManager.UpdateNoNull(System.Object)">
            <summary>
            更新数据（不更新NULL值）
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.SQLManager.MySQLManager.Query``1(System.String)">
            <summary>
            查询单个实体
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.SQLManager.MySQLManager.QueryByGuid``1(System.String)">
            <summary>
            根据主键值查询实体
            </summary>
            <param name="rowguid"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.SQLManager.MySQLManager.QueryList``1(System.String)">
            <summary>
            执行查询语句
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.SQLManager.MySQLManager.Query(System.String)">
            <summary>
            执行SQL语句
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.SQLManager.MySQLManager.UploadFile(System.String,System.Byte[])">
            <summary>
            上传文件
            </summary>
            <param name="filename"></param>
            <param name="bytes"></param>
            <returns>GUID</returns>
        </member>
        <member name="M:Kang.SQLManager.MySQLManager.IsConnecting">
            <summary>
            判断当前连接是否有效
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kang.SQLManager.MySQLManager.IsOpen">
            <summary>
            判断当前数据库是否打开
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kang.SQLManager.MySQLManager.IsClosed">
            <summary>
            判断当前数据库是否关闭
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.ConfigUtil.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="aFileName">Ini文件路径</param>
        </member>
        <member name="M:Kang.Util.ConfigUtil.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Kang.Util.ConfigUtil.ReadInt(System.String,System.String,System.Int32)">
            <summary>
            [扩展]读Int数值
            </summary>
            <param name="section">节</param>
            <param name="name">键</param>
            <param name="def">默认值</param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.ConfigUtil.ReadString(System.String,System.String,System.String)">
            <summary>
            [扩展]读取string字符串
            </summary>
            <param name="section">节</param>
            <param name="name">键</param>
            <param name="def">默认值</param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.ConfigUtil.WriteInt(System.String,System.String,System.Int32)">
            <summary>
            [扩展]写入Int数值，如果不存在 节-键，则会自动创建
            </summary>
            <param name="section">节</param>
            <param name="name">键</param>
            <param name="Ival">写入值</param>
        </member>
        <member name="M:Kang.Util.ConfigUtil.WriteString(System.String,System.String,System.String)">
            <summary>
            [扩展]写入String字符串，如果不存在 节-键，则会自动创建
            </summary>
            <param name="section">节</param>
            <param name="name">键</param>
            <param name="strVal">写入值</param>
        </member>
        <member name="M:Kang.Util.ConfigUtil.DeleteSection(System.String)">
            <summary>
            删除指定的 节
            </summary>
            <param name="section"></param>
        </member>
        <member name="M:Kang.Util.ConfigUtil.DeleteAllSection">
            <summary>
            删除全部 节
            </summary>
        </member>
        <member name="M:Kang.Util.ConfigUtil.IniReadValue(System.String,System.String)">
            <summary>
            读取指定 节-键 的值
            </summary>
            <param name="section"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.ConfigUtil.IniWriteValue(System.String,System.String,System.String)">
            <summary>
            写入指定值，如果不存在 节-键，则会自动创建
            </summary>
            <param name="section"></param>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Kang.Util.ConfigUtil.IniReadAllSection">
            <summary>
            获取所有的节（Section）名称，返回字符串数组，没有数据时返回null
            </summary>
            <returns></returns>
        </member>
        <member name="T:Kang.Util.DateUtil">
            <summary>
            日期处理工具集
            </summary>
        </member>
        <member name="M:Kang.Util.DateUtil.getFormatDate(System.String,System.DateTime)">
            <summary>
            得到格式化的时间
            </summary>
            <param name="format"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.DateUtil.stringToDate(System.String)">
            <summary>
            将时间字符串转化为时间对象
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.DateUtil.addMinutes(System.DateTime,System.Int32)">
            <summary>
            获取多少分钟后的时间对象
            </summary>
            <param name="date"></param>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.DateUtil.addHours(System.DateTime,System.Int32)">
            <summary>
            获取多少小时后的时间对象
            </summary>
            <param name="date"></param>
            <param name="hours"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.DateUtil.addDay(System.DateTime,System.Int32)">
            <summary>
            获取多少天后的时间对象
            </summary>
            <param name="date"></param>
            <param name="days"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.DateUtil.addMonth(System.DateTime,System.Int32)">
            <summary>
            获取多少月后的时间对象
            </summary>
            <param name="date"></param>
            <param name="months"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.DateUtil.addYear(System.DateTime,System.Int32)">
            <summary>
            获取多少年后的时间对象
            </summary>
            <param name="date"></param>
            <param name="years"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.DateUtil.DateDiffSeconds(System.DateTime,System.DateTime)">
            <summary>
            获取两个时间对象之间相差多少秒（绝对值）
            </summary>
            <param name="DateTime1"></param>
            <param name="DateTime2"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.DateUtil.DateDiffDays(System.DateTime,System.DateTime)">
            <summary>
            获取两个时间对象之间相差多少天（绝对值）
            </summary>
            <param name="DateTime1"></param>
            <param name="DateTime2"></param>
            <returns></returns>
        </member>
        <member name="T:Kang.Util.FileUtil">
            <summary>
            文件处理工具集
            </summary>
        </member>
        <member name="T:Kang.Util.GsonUtil">
            <summary>
            JSON字串处理工具集
            </summary>
        </member>
        <member name="M:Kang.Util.GsonUtil.GetObjectGsonString(System.Object)">
            <summary>
            将对象转换成JSON字串形式
            </summary>
            <param name="ob"></param>
            <returns></returns>
        </member>
        <member name="T:Kang.Util.HttpUtil">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kang.Util.HttpUtil.PostResponse(System.String,System.String,System.String,System.String)">
            <summary>
            Post请求
            </summary>
            <param name="url"></param>
            <param name="postData"></param>
            <param name="ContentType">application/json</param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.HttpUtil.PostResponse(System.String,System.String,System.String)">
            <summary>
            JSON、POST
            </summary>
            <param name="url"></param>
            <param name="postData"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.HttpUtil.PostResponse``1(System.String,System.String,System.String)">
            <summary>
            泛型：Post请求
            </summary>
            <typeparam name="T"></typeparam>
            <param name="url"></param>
            <param name="postData"></param>
            <param name="ContentType"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.HttpUtil.GetResponse``1(System.String,System.String)">
            <summary>
            泛型：Get请求
            </summary>
            <typeparam name="T"></typeparam>
            <param name="url"></param>
            <param name="ContentType"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.HttpUtil.GetResponse(System.String,System.String,System.String@)">
            <summary>
            Get请求
            </summary>
            <param name="url"></param>
            <param name="ContentType"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.HttpUtil.PutResponse(System.String,System.String,System.String,System.String@)">
            <summary>
            Put请求
            </summary>
            <param name="url"></param>
            <param name="putData"></param>
            <param name="ContentType"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.HttpUtil.PutResponse``1(System.String,System.String,System.String)">
            <summary>
            泛型：Put请求
            </summary>
            <typeparam name="T"></typeparam>
            <param name="url"></param>
            <param name="putData"></param>
            <param name="ContentType"></param>
            <returns></returns>
        </member>
        <member name="T:Kang.Util.NumberUtil">
            <summary>
            数字处理工具集
            </summary>
        </member>
        <member name="M:Kang.Util.NumberUtil.getRandomInt32Number">
            <summary>
            获取随机整数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.NumberUtil.getRandomInt32Number(System.Int32)">
            <summary>
            获取随机整数，但是小于max
            </summary>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.NumberUtil.getRandomInt32Number(System.Int32,System.Int32)">
            <summary>
            在[min,max)范围内获取一个随机整数
            </summary>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.NumberUtil.stringToInt32(System.String)">
            <summary>
            字符串转整数
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.NumberUtil.stringToDouble(System.String)">
            <summary>
            字符串转浮点数
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Kang.Util.StringUtil">
            <summary>
            字符串处理工具集
            </summary>
        </member>
        <member name="M:Kang.Util.StringUtil.isBlank(System.String)">
            <summary>
            判断字符串是否为空
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.StringUtil.isNotBlank(System.String)">
            <summary>
            判断字符串是否不为空
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.StringUtil.getSubStringFromEnd(System.String,System.Int32)">
            <summary>
            从字符串后面截取一定长度的字符串
            </summary>
            <param name="str"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.StringUtil.changeArrayToString(System.String[])">
            <summary>
            将数组转换为字符串
            </summary>
            <param name="arr"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.StringUtil.changeArrayToString(System.String[],System.String)">
            <summary>
            将数组转换为字符串，以String间隔
            </summary>
            <param name="arr"></param>
            <param name="join"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.StringUtil.changeArrayToList(System.String[])">
            <summary>
            将字符串数组转换为list
            </summary>
            <param name="arr"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.StringUtil.stringArrayHaveString(System.String[],System.String)">
            <summary>
            判断字符串数组中是否存在特定的字符串
            </summary>
            <param name="arr"></param>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Kang.Util.StringUtil.EncodingUnicode(System.String)">
            <summary>
            unicode转中文（符合js规则的）
            </summary>
            <returns></returns>
        </member>
        <member name="T:Kang.Util.TransExpV2`2">
            <summary>
            对象复制，工具类，TIn:有数据的对象类型，TOut:无数据的对象类型
            </summary>
            <typeparam name="TIn">有数据的对象</typeparam>
            <typeparam name="TOut">空白对象</typeparam>
        </member>
        <member name="M:Kang.Util.TransExpV2`2.Trans(`0)">
            <summary>
            复制对象，tIn:被复制的对象实体
            </summary>
            <param name="tIn">被复制的对象实体</param>
            <returns></returns>
        </member>
    </members>
</doc>
